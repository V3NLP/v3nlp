Phase: OrgString
Input: Token Organization Split
Options: control = appelt

Rule: OrgString
({Organization}):org
-->
:org{
  Annotation org = orgAnnots.iterator().next();
  try
    {
      org.getFeatures().put("string", doc.getContent().getContent(
      orgAnnots.firstNode().getOffset(),
      orgAnnots.lastNode().getOffset()).toString() );
    }
  catch (gate.util.InvalidOffsetException e) 
    {
      // should never occur, so rethrow as an unchecked exception
      throw new java.lang.IndexOutOfBoundsException(e.toString());
    }
 
}

Phase: OrgExtract
Input: Split Organization Token
Options: control = brill

Rule:	Buy
Priority: 50
(
	({Organization}):compa
	({Token, !Split})* 
	({Token.category == "VB"} | {Token.category == "VBN"} | {Token.category == "VBD"} | {Token.category == "VBZ"}):verb 
	({Token, !Split})* 
	({Organization}):compb

)
:relation -->
  :relation.OrgRelation = {relationType=:verb.Token.string,companyA=:compa.Organization.string,companyB=:compb.Organization.string}
